import requests
import json

# Configuration - replace with your Dynatrace details
BASE_URL = "https://IP"  # Replace with your Dynatrace host IP/URL
ENVIRONMENT_ID = "ENVIRONMENT"  # Replace with your environment ID
API_TOKEN = "YOUR_API_TOKEN"  # Replace with your Dynatrace API token

def get_management_zones():
    # Setup headers with API token
    headers = {
        "Authorization": f"Api-Token {API_TOKEN}",
        "Content-Type": "application/json"
    }
    
    # Step 1: Fetch all management zone objects with pagination
    all_items = []
    next_page_key = None
    
    while True:
        if next_page_key:
            url = f"{BASE_URL}/e/{ENVIRONMENT_ID}/api/v2/settings/objects?nextPageKey={next_page_key}"
        else:
            url = f"{BASE_URL}/e/{ENVIRONMENT_ID}/api/v2/settings/objects?schemaIds=builtin:management-zones"
        
        response = requests.get(url, headers=headers)
        response.raise_for_status()  # Raise error for bad status codes
        data = response.json()
        
        all_items.extend(data["items"])
        next_page_key = data.get("nextPageKey")
        if not next_page_key:
            break

    # Step 2: Extract MZ-OBJID and names, then get MZ-ID for each
    management_zones = []
    
    for item in all_items:
        obj_id = item["objectId"]
        name = item["value"]["name"]
        
        # Fetch detailed management zone to get MZ-ID
        detail_url = f"{BASE_URL}/e/{ENVIRONMENT_ID}/api/v2/settings/managementZones/{obj_id}"
        detail_resp = requests.get(detail_url, headers=headers)
        detail_resp.raise_for_status()
        detail_data = detail_resp.json()
        
        mz_id = detail_data["id"]
        management_zones.append({"id": mz_id, "name": name})
    
    # Step 3: Format the final JSON
    return {"management-zones": management_zones}

if __name__ == "__main__":
    try:
        result = get_management_zones()
        print(json.dumps(result, indent=2))
    except requests.exceptions.RequestException as e:
        print(f"API Error: {e}")
    except KeyError as e:
        print(f"Data parsing error: Missing key {e}")